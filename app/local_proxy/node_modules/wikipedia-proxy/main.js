/**
 * wikipedia-proxy  
 * 用于访问中文维基百科的Node.js本地反代服务器
 * @author Xmader
 * @copyright Copyright (c) 2018 Xmader
 * @license MIT
 * @see https://github.com/Xmader/wikipedia-proxy#readme 查看文档
 */

const httpProxy = require("http-proxy")
const fs = require("fs")

const ips = require("./ip-addresses")

const ssl = {
    cert: fs.readFileSync(`${__dirname}/cert.crt`),
    key: fs.readFileSync(`${__dirname}/rsa.key`)
}

let _editable, _protocol

const setReadOnly = (res) => {
    res.writeHead(403, {
        "Content-Type": "text/plain; charset=UTF-8"
    })
    res.end("代理服务器设置了禁止编辑页面")
}

const proxy = httpProxy.createProxyServer({})

proxy.on("proxyReq", async (proxyReq, req, res) => {
    if (!_editable && req.url.includes("action=edit")) { // 禁止编辑
        return setReadOnly(res)
    } else if (!_editable && req.url.includes("/w/api.php")) { // 阻止使用API编辑页面
        /** @type {?{data: Buffer}} */
        const body = req._readableState.buffer.tail
        if (body && body.data.toString().includes("action=edit")) {
            return setReadOnly(res)
        }
    }

    proxyReq.setHeader("Host", "zh.wikipedia.org")
})

proxy.on("proxyRes", function (proxyRes, req, res) {
    const location = proxyRes.headers.location // redirect_location
    if (location && location.includes("zh.wikipedia.org")) {
        res.writeHead(301, "", {
            ...proxyRes.headers,
            "location": location.replace("zh.wikipedia.org", req.headers.host).replace(/http(s)?(:\/\/)/, _protocol + "://")
        })
    }
})

proxy.on("error", function (e) {
    console.error(e)
})

const serverRequestListener = (req, res) => {
    proxy.web(req, res, {
        target: "https://198.35.26.96/", // 防止DNS污染, 但有时这个IP地址会被封?
        // target: "https://en.wikipedia.org/",
        changeOrigin: true,
        hostRewrite: `${req.headers.host}`,
        secure: false
    })
}

/**
 * 运行用于访问中文维基百科的本地反代服务器
 * @param {{port?: number; host?: string; protocol?: "https" | "http" ; editable?: boolean; silent?: boolean;}} options
 */
module.exports.run = function (options) {
    const { host, protocol, editable, silent } = { host: "0.0.0.0", protocol: "https", editable: true, silent: false, ...options }
    const port = (options.port | 0) || (protocol == "https" ? 443 : 80)
    _editable = editable

    if (!["https", "http"].includes(protocol))
        throw new Error("The protocol must be either 'https' or 'http'")

    const server = protocol == "https"
        ? require("https").createServer(ssl, serverRequestListener)
        : require("http").createServer(serverRequestListener)

    _protocol = protocol

    if (!silent) {
        const urls = host == "0.0.0.0"
            ? ["", ...ips].map(_host => _host && `${protocol}://${_host}:${port}`).join("\n  ")
            : `${protocol}://${host}:${port}`

        console.log(`listening on port ${port}`)
        console.log(`Available on: ${urls}`)
        console.log("Hit CTRL-C to stop the server")
    }

    server.listen(port, host)
}
