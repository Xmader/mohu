/**
 * 用于访问中文维基百科和reddit的Node.js本地反代服务器
 * @author Xmader
 * @copyright Copyright (c) 2018 Xmader
 * @license MIT
 * @see https://github.com/Xmader/wikipedia-proxy#readme 查看文档
 */

const httpProxy = require("http-proxy")
const requires_port = require("requires-port")
const fs = require("fs")

const ips = require("./ip-addresses")

const ssl = {
    cert: fs.readFileSync(`${__dirname}/cert.crt`),
    key: fs.readFileSync(`${__dirname}/rsa.key`)
}

const reddit_ips = [
    "151.101.25.140",
    "151.101.21.140",
    "151.101.41.140"
]

const random = function (len) {
    return Math.floor(Math.random() * len)
}

const proxy = httpProxy.createProxyServer({})

proxy.on("proxyReq", async (proxyReq, req) => {
    if (req.headers.host.includes("reddit.com")) {
        proxyReq.setHeader("Host", "www.reddit.com")
    }
    else {
        proxyReq.setHeader("Host", "zh.wikipedia.org")
    }
})

proxy.on("error", function (e) {
    console.error(e)
})

const serverRequestListener = (req, res) => {
    const target = req.headers.host.includes("reddit.com")
        ? `https://${reddit_ips[random(reddit_ips.length)]}/`
        : "https://198.35.26.96/"

    proxy.web(req, res, {
        target,
        changeOrigin: true,
        hostRewrite: `${req.headers.host}`,
        secure: false
    })
}

/**
 * 运行反代服务器
 * @param {{port?: number; host?: string; protocol?: "https" | "http" ; silent?: boolean;}} options
 */
module.exports.run = function (options) {
    const { host, protocol, silent } = { host: "0.0.0.0", protocol: "https", silent: false, ...options }
    const port = (options.port | 0) || (protocol == "https" ? 443 : 80)

    if (!["https", "http"].includes(protocol))
        throw new Error("The protocol must be either 'https' or 'http'")

    const server = protocol == "https"
        ? require("https").createServer(ssl, serverRequestListener)
        : require("http").createServer(serverRequestListener)

    if (!silent) {
        const _port = requires_port(port, protocol) ? `:${port}` : ""
        const urls = host == "0.0.0.0"
            ? ["", ...ips].map(_host => _host && `${protocol}://${_host}${_port}`).join("\n  ")
            : `${protocol}://${host}${_port}`

        console.log(`listening on port ${port}`)
        console.log(`Available on: ${urls}`)
        console.log("Hit CTRL-C to stop the server")
    }

    server.listen(port, host)
}
